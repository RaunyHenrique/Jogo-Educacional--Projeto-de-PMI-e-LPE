<?xml version="1.0" encoding="utf-8" ?>
<c2eventsheet>
    <!--All the 'name' attributes are ignored by Construct 2 - they are there for readability only.-->
    <name>#Conteudo</name>
    <events>
        <include>#Voltar</include>
        <variable constant="0" name="show_btn_jogar" sid="266239457343484" static="0" type="number">0</variable>
        <variable constant="0" name="current_page" sid="971173053242187" static="0" type="number">1</variable>
        <variable constant="0" name="last_page" sid="693827370616131" static="0" type="number">-1</variable>
        <event-group description="" sid="725604414373798" title="Conteudo">
            <sub-events>
                <variable constant="0" name="page_seperator" sid="970719619171956" static="0" type="text">$%</variable>
                <comment>As perguntas são definidas de acordo com o Level-1 que corresponde ao index do array Conteudo. As paginas são definidas/separadas por &quot;page_seperator&quot;</comment>
                <event-block sid="762366871371431">
                    <conditions>
                        <condition id="-2" name="On start of layout" sid="968146039969993" type="System" />
                    </conditions>
                    <actions>
                        <action id="5" name="Push" sid="819408710162081" type="Conteudo">
                            <param id="0" name="Where">0</param>
                            <param id="1" name="Value">&quot;Tipos básicos de variáveis&#x0D;&#x0A;&#x0D;&#x0A;Tipos básicos de variáveis são as representações de dados dentro do código fonte. Quase todas as linguagens de programação têm notações para valores comuns de dados como inteiros, números de ponto flutuante, strings e booleanos.&quot;&#x0D;&#x0A;&amp;page_seperator&amp;&#x0D;&#x0A;&quot;Strings: Podemos incluir basicamente qualquer coisa, incluiremos letras, números, caracteres especiais. A restrição é que usemos aspas (simples ou duplas) para começar e para terminar (Este é o único tipo que precisamos incluir um aspas para começar e terminar a informação). Veja o exemplo:&#x0D;&#x0A;&#x0D;&#x0A;string = &apos;Textos com acentuação, 1 número e interrogação?&apos;&quot;&#x0D;&#x0A;&amp;page_seperator&amp;&#x0D;&#x0A;&quot;Inteiros: Esse tipo aceita qualquer número inteiro, como aprendemos na escola são os números tanto negativos, quanto positivos. Veja o exemplo:&#x0D;&#x0A;&#x0D;&#x0A;numero = -10&#x0D;&#x0A;&#x0D;&#x0A;numero1 = 10&#x0D;&#x0A;numero2 = 15&#x0D;&#x0A;resultado = numero1 + numero2 (que também será do tipo inteiro!)&quot;&#x0D;&#x0A;&amp;page_seperator&amp;&#x0D;&#x0A;&quot;Float: Trabalha com os números reais, aqueles com casas decimais, semelhante ao Integer. O sinal que separa as casas decimais deve ser o ponto final (.) Não use vírgula. Exemplo:&#x0D;&#x0A;&#x0D;&#x0A;float = 500.99&#x0D;&#x0A;valor = -100.500&quot;&#x0D;&#x0A;&amp;page_seperator&amp;&#x0D;&#x0A;&quot;Booleanos: correspondem ao valores true (verdadeiro) e false (falso).&#x0D;&#x0A;&#x0D;&#x0A;Na literatura você pode encontrar esses dados de diferentes formas, por exemplo: verdadeiro/falso, 1/0, ligado/desligado, true/false, sim/não e etc. Exemplo: &#x0D;&#x0A;&#x0D;&#x0A;ligado = true&#x0D;&#x0A;desligado= false&quot;</param>
                            <param id="2" name="Axis">0</param>
                        </action>
                        <action id="5" name="Push" sid="545304932980338" type="Conteudo">
                            <param id="0" name="Where">0</param>
                            <param id="1" name="Value">&quot;Operadores relacionais e lógicos&#x0D;&#x0A;&#x0D;&#x0A;Operadores relacionais comparam dois valores e retornam um valor booleano (true ou false). Veja na tabela à seguir esses operadores:&quot;&#x0D;&#x0A;&amp;page_seperator&amp;&#x0D;&#x0A;&quot;Operador Relacional        Descrição&#x0D;&#x0A;                  ==                                     Igual a&#x0D;&#x0A;                  !=                                      Diferente de&#x0D;&#x0A;                  &gt;                                       Maior que&#x0D;&#x0A;                  &lt;                                       Menor que&#x0D;&#x0A;                  &gt;=                                    Maior do que ou igual a&#x0D;&#x0A;                  &lt;=                                    Menor do que ou igual a&quot;&#x0D;&#x0A;&amp;page_seperator&amp;&#x0D;&#x0A;&quot;Exemplos:&#x0D;&#x0A;&#x0D;&#x0A;a = 5&#x0D;&#x0A;b = 2&#x0D;&#x0A;&#x0D;&#x0A;a == b (false)&#x0D;&#x0A;a &gt; b (true)&#x0D;&#x0A;a &gt;= b (true)&quot;&#x0D;&#x0A;&amp;page_seperator&amp;&#x0D;&#x0A;&quot;Os operadores lógicos trabalham como operadores booleanos e seu resultado também será booleano (true ou false). Eles são usados somente em expressões lógicas. Os operadores lógicos são: E, OU, NÃO, NÃO-E e NÃO-OU.&quot;&#x0D;&#x0A;&amp;page_seperator&amp;&#x0D;&#x0A;&quot;Operador E (AND):&#x0D;&#x0A;Operador “E” ou “AND” resulta em um valor VERDADEIRO se os dois valores de entrada da operação forem VERDADEIROs, caso contrário o resultado é FALSO.&quot;&#x0D;&#x0A;&amp;page_seperator&amp;&#x0D;&#x0A;&quot;Operador OU (OR):&#x0D;&#x0A;Operador “OU” ou “OR” resulta em um valor VERDADEIRO se ao menos UM dos dois valores de entrada da operação for VERDADEIRO, caso contrário o resultado é FALSO.&quot;&#x0D;&#x0A;&amp;page_seperator&amp;&#x0D;&#x0A;&quot;Operador NÃO (NOT):&#x0D;&#x0A;O operador “NÃO” ou “NOT” é o único operador que recebe como entrada apenas um valor, e sua função é simplesmente inverter os valores. Ou seja, se o valor de entrada for VERDADEIRO, o resultado será FALSO e se o valor de entrada for FALSO, o resultado será VERDADEIRO.&quot;&#x0D;&#x0A;&amp;page_seperator&amp;&#x0D;&#x0A;&quot;Operador NÃO-OU (NOR):&#x0D;&#x0A;Operador “NÃO-OU” ou “NOR” é o contrário do operador OU (OR), ou seja, resulta em VERDADEIRO, se os dois valores forem FALSO, na verdade este é o operador OU (OR) seguido do operador NÃO (NOT).&#x0D;&#x0A;&#x0D;&#x0A;Operador NÃO-E (NAND):&#x0D;&#x0A;Operador “NÃO-E” ou “NAND” é o contrário do operador E (AND), ou seja, resulta em VERDADEIRO, se ao menos um dos dois valores for FALSO.&quot;</param>
                            <param id="2" name="Axis">0</param>
                        </action>
                        <action id="5" name="Push" sid="210841543520353" type="Conteudo">
                            <param id="0" name="Where">0</param>
                            <param id="1" name="Value">&quot;Estruturas condicionais&#x0D;&#x0A;&#x0D;&#x0A;Sem dúvida estruturas condicionais são os recursos mais utilizados na maioria das linguagens de programação, afinal é o que deixa o sistema mais “inteligente”, afim de o código tomar algumas decisões com base as condições que foi previamente programado. Vejamos as duas estruturas condicionais principais:&quot;&#x0D;&#x0A;&amp;page_seperator&amp;&#x0D;&#x0A;&quot;If: Com o “if” podemos tratar condicionais de forma bastante simples! Basta escrever “if” depois entre parênteses você inclui a condição específica, logo em seguida entre chaves, você inclui o que quer que seja feito caso a condição seja verdadeira. Veja o exemplo:&#x0D;&#x0A;&#x0D;&#x0A;nome = “Balrog”&#x0D;&#x0A;&#x0D;&#x0A;if(nome == “Balrog”) { print(“You shall not pass”) }&quot;&#x0D;&#x0A;&amp;page_seperator&amp;&#x0D;&#x0A;&quot;Else: O else é bem mais simples do que se imagina, a grosso modo seria um complemento do if, note que no if temos uma condição que caso seja verdadeira então deverá ser executado um determinado código, mas e se você quiser executar um outro código caso a condição seja falsa? Nesse caso existe o else. Veja no exemplo a seguir:&quot;&#x0D;&#x0A;&amp;page_seperator&amp;&#x0D;&#x0A;&quot;som = “AuAu”&#x0D;&#x0A;&#x0D;&#x0A;if(som == “AuAu”) {&#x0D;&#x0A;    print(“É um cachorro!”)&#x0D;&#x0A;} else {&#x0D;&#x0A;    print(“Não é cachorro :(”)&#x0D;&#x0A;}&quot;</param>
                            <param id="2" name="Axis">0</param>
                        </action>
                        <action id="-9" name="Set value" sid="696848908547888" type="System">
                            <param id="0" name="Variable">show_btn_jogar</param>
                            <param id="1" name="Value">0</param>
                        </action>
                        <action id="-9" name="Set value" sid="797875360022292" type="System">
                            <param id="0" name="Variable">current_page</param>
                            <param id="1" name="Value">1</param>
                        </action>
                        <action id="-9" name="Set value" sid="791084868099960" type="System">
                            <param id="0" name="Variable">last_page</param>
                            <param id="1" name="Value">tokencount(Conteudo.At(Level_seleted-1), page_seperator)</param>
                        </action>
                    </actions>
                </event-block>
                <event-block sid="170723749921711">
                    <conditions>
                        <condition id="-1" name="Every tick" sid="804124699804983" type="System" />
                    </conditions>
                    <actions />
                    <sub-events>
                        <event-block sid="163404951092637">
                            <conditions>
                                <condition id="-14" name="Compare variable" sid="237693535089605" type="System">
                                    <param id="0" name="Variable">current_page</param>
                                    <param id="1" name="Comparison">0</param>
                                    <param id="2" name="Value">1</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-15" name="Set visible" sid="521265271344154" type="btn_page_anterior">
                                    <param id="0" name="Visibility">0</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block sid="526038872157906">
                            <conditions>
                                <condition id="-22" name="Else" sid="860737517506184" type="System" />
                            </conditions>
                            <actions>
                                <action id="-15" name="Set visible" sid="973283305486841" type="btn_page_anterior">
                                    <param id="0" name="Visibility">1</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block sid="459281141849069">
                            <conditions>
                                <condition id="-14" name="Compare variable" sid="856715638759544" type="System">
                                    <param id="0" name="Variable">current_page</param>
                                    <param id="1" name="Comparison">0</param>
                                    <param id="2" name="Value">last_page</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-15" name="Set visible" sid="546753175219023" type="btn_page_proximo">
                                    <param id="0" name="Visibility">0</param>
                                </action>
                                <action id="-9" name="Set value" sid="582109277219626" type="System">
                                    <param id="0" name="Variable">show_btn_jogar</param>
                                    <param id="1" name="Value">1</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block sid="231343936372168">
                            <conditions>
                                <condition id="-22" name="Else" sid="739546920059815" type="System" />
                            </conditions>
                            <actions>
                                <action id="-15" name="Set visible" sid="244124432633824" type="btn_page_proximo">
                                    <param id="0" name="Visibility">1</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block sid="345890154552826">
                            <conditions>
                                <condition id="-14" name="Compare variable" sid="374741727102080" type="System">
                                    <param id="0" name="Variable">show_btn_jogar</param>
                                    <param id="1" name="Comparison">0</param>
                                    <param id="2" name="Value">1</param>
                                </condition>
                            </conditions>
                            <actions>
                                <action id="-15" name="Set visible" sid="596491639414509" type="btn_jogar">
                                    <param id="0" name="Visibility">1</param>
                                </action>
                            </actions>
                        </event-block>
                        <event-block sid="175662020027212">
                            <conditions />
                            <actions>
                                <action id="0" name="Set text" sid="954504960991325" type="TextConteudo">
                                    <param id="0" name="Text">tokenat(Conteudo.At(Level_seleted-1), current_page-1, page_seperator)</param>
                                </action>
                            </actions>
                        </event-block>
                    </sub-events>
                </event-block>
            </sub-events>
        </event-group>
        <event-group description="" sid="522522230329518" title="Mouse Event - Conteudo">
            <sub-events>
                <event-block sid="772737709869543">
                    <conditions>
                        <condition id="6" name="On object clicked" sid="153291354475750" type="Mouse">
                            <param id="0" name="Mouse button">0</param>
                            <param id="1" name="Click type">0</param>
                            <param id="2" name="Object clicked">btn_page_anterior</param>
                        </condition>
                        <condition id="-9" name="Is visible" sid="571946964321922" type="btn_page_anterior" />
                    </conditions>
                    <actions>
                        <action id="-11" name="Subtract from" sid="611400581777402" type="System">
                            <param id="0" name="Variable">current_page</param>
                            <param id="1" name="Value">1</param>
                        </action>
                    </actions>
                </event-block>
                <event-block sid="346404986077064">
                    <conditions>
                        <condition id="6" name="On object clicked" sid="878881232830831" type="Mouse">
                            <param id="0" name="Mouse button">0</param>
                            <param id="1" name="Click type">0</param>
                            <param id="2" name="Object clicked">btn_page_proximo</param>
                        </condition>
                        <condition id="-9" name="Is visible" sid="176965615133205" type="btn_page_proximo" />
                    </conditions>
                    <actions>
                        <action id="-10" name="Add to" sid="586999733867771" type="System">
                            <param id="0" name="Variable">current_page</param>
                            <param id="1" name="Value">1</param>
                        </action>
                    </actions>
                </event-block>
                <event-block sid="820989205647627">
                    <conditions>
                        <condition id="6" name="On object clicked" sid="409472642617321" type="Mouse">
                            <param id="0" name="Mouse button">0</param>
                            <param id="1" name="Click type">0</param>
                            <param id="2" name="Object clicked">btn_jogar</param>
                        </condition>
                        <condition id="-9" name="Is visible" sid="151615571650384" type="btn_jogar" />
                    </conditions>
                    <actions>
                        <action id="-25" name="Go to layout (by name)" sid="638082787890585" type="System">
                            <param id="0" name="Layout">str(&quot;Level_&quot;&amp;Level_seleted)</param>
                        </action>
                    </actions>
                </event-block>
            </sub-events>
        </event-group>
    </events>
</c2eventsheet>
